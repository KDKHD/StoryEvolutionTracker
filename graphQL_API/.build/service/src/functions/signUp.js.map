{"version":3,"sources":["webpack://instawatch/./src/database/connection.ts","webpack://instawatch/./src/database/models/search.ts","webpack://instawatch/./src/database/models/user.ts","webpack://instawatch/./src/functions/signUp.ts","webpack://instawatch/external \"dotenv\"","webpack://instawatch/external \"jsonwebtoken\"","webpack://instawatch/external \"mongoose\"","webpack://instawatch/webpack/bootstrap","webpack://instawatch/webpack/startup"],"names":[],"mappings":"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","file":"src/functions/signUp.js","sourcesContent":["import { connect } from \"mongoose\";\n\nclass Database {\n  constructor() {\n    this._connect();\n  }\n\n  async _connect() {\n    try {\n      await connect(`mongodb+srv://dev:j16c8SXcLTlIty1R@cluster0.uwf3u.mongodb.net/articles?authSource=admin&replicaSet=atlas-tcrrsf-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true`, { useNewUrlParser: true, useUnifiedTopology: true });\n      require('./models/search');\n\n      console.log(\"Database connection successful\");\n    }\n    catch(error) {\n      console.error(error)\n    }\n  }\n}\n\nexport default new Database();\n\n\n","import mongoose, { Schema } from \"mongoose\";\nvar SearchSchema = new mongoose.Schema({\n  url: {\n    type: \"string\",\n    required: true,\n  },\n  title: {\n    type: \"string\",\n    required: true,\n  },\n  publish_date: {\n    type: \"string\",\n    required: true,\n  },\n  text: {\n    type: \"string\",\n    required: true,\n  },\n\n  similar: [{ type: Schema.Types.ObjectId, ref: \"Search\" }],\n});\n\nexport default mongoose.model(\"Search\", SearchSchema, \"search\");\n","import mongoose, { Schema } from \"mongoose\";\nrequire('./search');\n\nvar UserSchema = new mongoose.Schema({\n  email: {\n    type: \"string\",\n    required: true,\n  },\n  passwordh: {\n    type: \"string\",\n    required: true,\n  },\n  name: {\n    type: \"string\",\n    required: true,\n  },\n  bookmarks: {\n    type: Object\n  },\n  history: [{ type: Schema.Types.ObjectId, ref: \"Search\" }],\n});\n\nexport default mongoose.model(\"User\", UserSchema, \"users\");\n","import jwt from \"jsonwebtoken\";\nimport User from \"../database/models/user\";\nimport db from \"../database/connection\";\ndb._connect();\nrequire(\"dotenv\").config();\n\nmodule.exports.handler = (event, context, callback) => {\n  const body = JSON.parse(event.body);\n  const { email, password1, password2, name } = body;\n\n  if (password1 != password2) {\n    const response = {\n      statusCode: 403,\n      body: \"Passwords must match\",\n    };\n\n    return callback(null, response);\n  }\n  //check if user exists\n\n  User.findOne({ email }).then((user: any) => {\n    if (user) {\n      const response = {\n        statusCode: 403,\n        body: \"Email already exists\",\n      };\n\n      return callback(null, response);\n    }\n    //create new user\n\n    User.create({ email, passwordh: password1, name }).then((user) => {\n      const token = jwt.sign(\n        {\n          data: {\n            id:user._id,\n            email,\n            name,\n            iat: Math.floor(Date.now() / 1000) - 30,\n          },\n        },\n        process.env.TOKEN_SECRET,\n        { expiresIn: \"1h\" }\n      );\n\n      const response = {\n        statusCode: 200,\n        body: JSON.stringify({\n          token,\n        }),\n      };\n\n      return callback(null, response);\n    });\n  });\n};\n","module.exports = require(\"dotenv\");;","module.exports = require(\"jsonwebtoken\");;","module.exports = require(\"mongoose\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/functions/signUp.ts\");\n"],"sourceRoot":""}